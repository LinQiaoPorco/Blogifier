@using Microsoft.AspNetCore.Components
@using Blogifier.Shared
@using Blogifier.Services

@inject IJSRuntime JSRuntime
@inject IHttpClientFactory ClientFactory
@inject IMessageService _commentsRenderTrigger

<div class="col-1 mt-2">
    <img src="@Avatar" class="rounded-circle mx-auto d-block float-start" alt="@Name">
</div>
<div class="col">
    <div class="card border-0 shadow-sm">
        <ul class="list-group list-group-flush">
            <li class="list-group-item border-0">
                <p class="text-muted mb-0">@Name posted in @Comment.UpdatedDate.ToString()
                </p>
            </li>
            <li class=" list-group-item border-0 mb-0">@((MarkupString)Comment.CommentContent)</li>
            <li class=" list-group-item border-0 mb-0">
                <button type="button" class="btn btn-light btn-sm" @onclick="ShouldRenderEditor">Reply</button>
            </li>
        </ul>
    </div>
</div>
<br>

@* 本页放置回复按钮，点击回复，传递参数到上一层，触发Comments页面动态渲染组件 *@

@code {
    [Parameter]
    public Comment Comment { get; set; }
    private HttpClient _httpClient { get; set; }
    private CommentUserModel authorModel { get; set; }
    public string Avatar { get; set; }
    public string Email { get; set; }
    public string Name { get; set; }
    public bool IsAdmin { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await Load();
    }
    public async Task Load()
    {
        _httpClient = ClientFactory.CreateClient("Local");
        // authorAvatar = await _httpClient.GetStringAsync("api/author/avatarbyguid/" + Comment.CommentedUserId);
        authorModel = await
        _httpClient.GetFromJsonAsync<CommentUserModel>($"api/author/partialinfobyguid/{Comment.CommentedUserId}");
        Avatar = authorModel.Avatar;
        Name = authorModel.Name;
        Email = authorModel.Email;
        IsAdmin = authorModel.IsAdmin;
    }
    public void ShouldRenderEditor() { }
}